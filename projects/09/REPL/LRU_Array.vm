function LRU_Array.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 0
call Array.new 1
pop this 1
push constant 1
neg
pop this 2
push constant 1
pop this 3
push pointer 0
return
function LRU_Array.dispose 0
push argument 0
pop pointer 0
push pointer 0
call LRU_Array.elemsDispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function LRU_Array.mode 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function LRU_Array.add 1
push argument 0
pop pointer 0
push this 2
push this 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 0
call String.dispose 1
pop temp 0
push this 2
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
push this 0
call LRU_Array.mode 2
pop this 2
push this 2
pop this 3
goto IF_END0
label IF_FALSE0
push this 2
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 2
push this 2
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push this 3
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push constant 1
add
push this 0
call LRU_Array.mode 2
pop this 3
label IF_END1
label IF_END0
push constant 0
return
function LRU_Array.elemsDispose 2
push argument 0
pop pointer 0
push this 2
pop local 0
push local 0
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 2
push this 3
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call String.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END1
label IF_FALSE1
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call String.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 3
lt
not
if-goto WHILE_END2
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call String.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
label IF_END1
push constant 0
return
function LRU_Array.clear 0
push argument 0
pop pointer 0
push pointer 0
call LRU_Array.elemsDispose 1
pop temp 0
push constant 1
neg
pop this 2
push constant 1
pop this 3
push constant 0
return
function LRU_Array.print 1
push argument 0
pop pointer 0
push this 2
pop local 0
push local 0
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 2
push this 3
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END1
label IF_FALSE1
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push local 0
push this 1
add
pop pointer 1
push that 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 3
lt
not
if-goto WHILE_END2
push local 0
push this 1
add
pop pointer 1
push that 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
label IF_END1
push constant 0
return
