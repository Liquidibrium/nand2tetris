// The Linear Congruential Generator
class Random {
    static int randN;
    static int time;
    function void init(int seed) {
        let randN = 0;
        let time = 0;
        return;
    }

    function int rand() {
        /** return a random number in the range 0..32767 */
        let randN = (randN+time) + 20251;
        let time = (time*2) + 1;
        
        if (randN < 0) {
            let randN = randN - 32767 - 1;
        }
        return randN;
    }

    function int randRange(int range) {
        /** return a random number in the range 0..range */
        var int mask;
        var int ret;
        let mask = 1;
        while (mask < range) {
            let mask = mask * 2 + 1;
        }
        let ret = Random.rand() & mask;
        while (ret > range) {
            let ret = Random.rand() & mask;
        }
        return ret;
    }


    // random number in range [0;16)
    function int getInt() {
        let randN = ((9 * (randN + time)) + 7) & 15;
        let time = (time*7) + 1;
        return randN;
    }

    // range should be in 0 , 16 
    function int getIntInRange(int range){
        let randN = Random.getInt();
        while(randN > range) {
           let  randN = Random.getInt();
        }
        return randN;
    }

    // function int getIntBetween0and9(){
    //     return getIntInRange(9);
    // }

    function Point getPoint(){
        return Point.new(Random.randRange(9), Random.randRange(9));        
    }
    
    function bool getBool(){
        return Random.getInt() < 8;        
    }

}